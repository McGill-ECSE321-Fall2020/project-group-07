ArtworkService:

	1. retrieveRandomAvailableArtworks(numToRetrieve)				[R.2]
			- exception: numAvailable<numToRetrieve
			- return: list of available artworks

	2. getArtworkDetail(artworkId)									[R.10]
			- exception: no Artwork with artworkId found
			- return: ArtworkDto

	3. getAvailableArtworkByArtistName(firstname,lastname)			[R.11]
			- exception: no firstName
			- exception: no lastName
			- exception: no artist with firstName and lastName
			- return: list of Available artworks by artist

	------------------extras------------------
	4. getAllAvailableArtworks()
			- exception: no available artworks
			- return: list of available artworks

	5. createArtwork(username,artworkDto)
			- exception: username not in system
			- exception: username not associated with an artist
			- exception: invalid artworkDto
			- returns: ArtworkDto 


PurchaseService:

	1. createPurchase(username,artworkId)							[R.3,4]

			- exception: can't find by GalleryRegistration by username
			- exception: GalleryRegistration not a Customer
			- exception: artwork with artworkId not found
			- exception: artwork with artworkId not available
			- side effect: purchase.getArtwork.setStatus(UNAVAILABLE)
			- return: PurchaseDto

	2. setPurchaseShipmentType(username,artworkId,shipmentType)		[R.5]
			- exception: can't find by GalleryRegistration by username
			- exception: GalleryRegistration not a Customer
			- exception: artwork with artworkId not found
			- exception: artwork with artworkId not available
			- exception: invalid shipmentType
			- return: PurchaseDto

	------------------extras------------------
	3. deletePurchase(username,artworkId)
			- exception: can't find by GalleryRegistration by username
			- exception: GalleryRegistration not a Customer
			- exception: artwork with artworkId not found
			- exception: artwork with artworkId not available
			- side effect: purchase.getArtwork.setStatus(AVAILABLE)
			- return: PurchaseDto

ShipmentService:

	1. payShipment(username,shipmentId,creditCardNum,creditCardHolderName,creditCardCSV,creditCardExp,creditCardPost)	[R.6]
			- exception: can't find by GalleryRegistration by username
			- exception: GalleryRegistration not a Customer
			- exception: shipmentId not found
			- exception: invalid creditCard info (5 possibilities)
			- side effect: shipment.setStatus(PAID)
			- return: ShipmentDto

	------------------extras------------------
	2. createShipment(Set<Purchase> purchase, recipientName, srcAddress, destAddress)
			- exception: not all purchases are DROPOFFs
			- exception: no recipient name
			- exception: invalid srcAddress
			- exception: invalid destAddress
			- side effect: shipment.setStatus(CREATED)
			- return: ShipmentDto

	3. deleteShipment(shipmentId)
			- ShipmentId not found
			- return: shiptmentDto


ArtistService:

	1. deleteArtist(username)										[R.7]
			- exception: username not found
			- exception: username not associated with artist
			- return: ArtistDto

	2. editProfile(username)										[R.8]
			- exception: username not found
			- exception: username not associated with artist
			- exception: no profile associated with artist
			- return: profileDto
	------------------extras------------------
	3. createProfile(username)
			- exception: username not found
			- exception: username not associated with artist
			- exception: existing profile associated with artist
			- return: ProfileDto

ApplicationService:
	1. generateSummary()											[R.9]
			- no exceptions
			- return:  csv of columns | artwork_id | artwork name | price | commission | shipping cost |

	------------------extras------------------
	2. setGalleryRegistrationAsCustomer(username)
			- exception: username not found
			- exception: username already as Customer
			- return: CustomerDto

	3. setGalleryRegistrationAsArtist(username)
			- exception: username not found
			- exception: username already as Artist
			- return: ArtistDto

	4. setGalleryRegistrationAsAdmin(username)
			- exception: username not found
			- exception: username already as Admin
			- exception: already admin in Sys
			- return ArtistDto


